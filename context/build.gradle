plugins { id 'com.android.library' }
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.team.github@51lianlian.com'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1619
        versionName "1.6.19"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        /**
         * Room
         */
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures { dataBinding = true }
}

def room_version = "2.3.0-rc01"
dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /**
     * RxJava + RxAndroid
     */
    api "io.reactivex.rxjava3:rxjava:3.0.12"
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    /**
     * ARouter
     * https://github.com/alibaba/ARouter/tree/master
     */
    api 'com.alibaba:arouter-api:1.5.1'
    /**
     * MMKV
     */
    api 'com.tencent:mmkv-static:1.2.8'

    /**
     *  Gson
     *  https://github.com/google/gson
     */
    api 'com.google.code.gson:gson:2.8.6'

    /**
     * Retrofit2
     */
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    api 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    /**
     * RxPermissions
     * https://github.com/tbruyelle/RxPermissions
     */
    api 'com.github.tbruyelle:rxpermissions:0.12'

    //搜索功能
    api 'com.amap.api:location:5.4.0'

    /**
     * Room
     */
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // 编译时期进行注解处理
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'
    compileOnly 'com.google.auto.service:auto-service:1.0-rc4'

    //通过类调用的方式来生成Java代码[JavaPoet]
    implementation 'com.squareup:javapoet:1.13.0'

    api 'com.elvishew:xlog:1.11.0'

    /**
     *  沉浸式状态栏
     *  https://github.com/gyf-dev/ImmersionBar
     */
    api 'com.gyf.immersionbar:immersionbar:3.0.0'
    api 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    api 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'

    /**
     * 阿里云OSS
     * https://github.com/aliyun/aliyun-oss-android-sdk?spm=a2c4g.11186623.2.10.502e4de3lAPo50
     */
    api 'com.aliyun.dpa:oss-android-sdk:2.9.5'
}